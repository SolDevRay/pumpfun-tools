import requests
import time
from dotenv import load_dotenv
import os
from src.helpers.logger import get_custom_logger
logger = get_custom_logger()
load_dotenv()
global CAPTCHA_API_KEY
CAPTCHA_API_KEY = os.getenv("CAPSOLVER_KEY")
def capsolver(proxy):
    payload = {
    "clientKey": CAPTCHA_API_KEY,
    "task": {
        "type": "ReCaptchaV3EnterpriseTask",
        "websiteURL": "https://www.pump.fun",
        "websiteKey": "6LcmKsYpAAAAABAANpgK3LDxDlxfDCoPQUYm3NZI",
        "anchor": "",
        "reload": "",
        "pageAction": "submit",
        "proxy": str(proxy)
    }
}   
    
    res = requests.post("https://api.capsolver.com/createTask", json=payload)
    resp = res.json()
    task_id = resp.get("taskId")
    if not task_id:
        logger.critical("Failed to create task:", res.text)
        return


    while True:
        time.sleep(1)  # delay
        payload = {"clientKey": CAPTCHA_API_KEY, "taskId": task_id}
        res = requests.post("https://api.capsolver.com/getTaskResult", json=payload)
        resp = res.json()
        status = resp.get("status")
        if status == "ready":
            logger.debug(f"Generated captcha token!")
            return resp['solution']['gRecaptchaResponse']
        if status == "failed" or resp.get("errorId"):
            logger.error("Solve failed! response:", res.text)
            return False
